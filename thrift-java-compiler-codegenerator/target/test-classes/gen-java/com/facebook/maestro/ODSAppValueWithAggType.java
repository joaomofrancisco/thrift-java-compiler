/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.maestro;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-7-22")
public class ODSAppValueWithAggType implements org.apache.thrift.TBase<ODSAppValueWithAggType, ODSAppValueWithAggType._Fields>, java.io.Serializable, Cloneable, Comparable<ODSAppValueWithAggType> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ODSAppValueWithAggType");

  private static final org.apache.thrift.protocol.TField UNIX_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("unixTime", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("value", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField ENTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("entity", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("key", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField AGG_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("aggType", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CATEGORY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("category_id", org.apache.thrift.protocol.TType.I32, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ODSAppValueWithAggTypeStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ODSAppValueWithAggTypeTupleSchemeFactory());
  }

  public long unixTime; // required
  public double value; // required
  public String entity; // required
  public String key; // required
  /**
   * 
   * @see OdsAggregationType
   */
  public OdsAggregationType aggType; // required
  public int category_id; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UNIX_TIME((short)1, "unixTime"),
    VALUE((short)2, "value"),
    ENTITY((short)3, "entity"),
    KEY((short)4, "key"),
    /**
     * 
     * @see OdsAggregationType
     */
    AGG_TYPE((short)5, "aggType"),
    CATEGORY_ID((short)6, "category_id");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UNIX_TIME
          return UNIX_TIME;
        case 2: // VALUE
          return VALUE;
        case 3: // ENTITY
          return ENTITY;
        case 4: // KEY
          return KEY;
        case 5: // AGG_TYPE
          return AGG_TYPE;
        case 6: // CATEGORY_ID
          return CATEGORY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __UNIXTIME_ISSET_ID = 0;
  private static final int __VALUE_ISSET_ID = 1;
  private static final int __CATEGORY_ID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UNIX_TIME, new org.apache.thrift.meta_data.FieldMetaData("unixTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VALUE, new org.apache.thrift.meta_data.FieldMetaData("value", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ENTITY, new org.apache.thrift.meta_data.FieldMetaData("entity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY, new org.apache.thrift.meta_data.FieldMetaData("key", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGG_TYPE, new org.apache.thrift.meta_data.FieldMetaData("aggType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, OdsAggregationType.class)));
    tmpMap.put(_Fields.CATEGORY_ID, new org.apache.thrift.meta_data.FieldMetaData("category_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ODSAppValueWithAggType.class, metaDataMap);
  }

  public ODSAppValueWithAggType() {
    this.category_id = 0;

  }

  public ODSAppValueWithAggType(
    long unixTime,
    double value,
    String entity,
    String key,
    OdsAggregationType aggType,
    int category_id)
  {
    this();
    this.unixTime = unixTime;
    setUnixTimeIsSet(true);
    this.value = value;
    setValueIsSet(true);
    this.entity = entity;
    this.key = key;
    this.aggType = aggType;
    this.category_id = category_id;
    setCategory_idIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ODSAppValueWithAggType(ODSAppValueWithAggType other) {
    __isset_bitfield = other.__isset_bitfield;
    this.unixTime = other.unixTime;
    this.value = other.value;
    if (other.isSetEntity()) {
      this.entity = other.entity;
    }
    if (other.isSetKey()) {
      this.key = other.key;
    }
    if (other.isSetAggType()) {
      this.aggType = other.aggType;
    }
    this.category_id = other.category_id;
  }

  public ODSAppValueWithAggType deepCopy() {
    return new ODSAppValueWithAggType(this);
  }

  @Override
  public void clear() {
    setUnixTimeIsSet(false);
    this.unixTime = 0;
    setValueIsSet(false);
    this.value = 0.0;
    this.entity = null;
    this.key = null;
    this.aggType = null;
    this.category_id = 0;

  }

  public long getUnixTime() {
    return this.unixTime;
  }

  public ODSAppValueWithAggType setUnixTime(long unixTime) {
    this.unixTime = unixTime;
    setUnixTimeIsSet(true);
    return this;
  }

  public void unsetUnixTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UNIXTIME_ISSET_ID);
  }

  /** Returns true if field unixTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUnixTime() {
    return EncodingUtils.testBit(__isset_bitfield, __UNIXTIME_ISSET_ID);
  }

  public void setUnixTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UNIXTIME_ISSET_ID, value);
  }

  public double getValue() {
    return this.value;
  }

  public ODSAppValueWithAggType setValue(double value) {
    this.value = value;
    setValueIsSet(true);
    return this;
  }

  public void unsetValue() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VALUE_ISSET_ID);
  }

  /** Returns true if field value is set (has been assigned a value) and false otherwise */
  public boolean isSetValue() {
    return EncodingUtils.testBit(__isset_bitfield, __VALUE_ISSET_ID);
  }

  public void setValueIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VALUE_ISSET_ID, value);
  }

  public String getEntity() {
    return this.entity;
  }

  public ODSAppValueWithAggType setEntity(String entity) {
    this.entity = entity;
    return this;
  }

  public void unsetEntity() {
    this.entity = null;
  }

  /** Returns true if field entity is set (has been assigned a value) and false otherwise */
  public boolean isSetEntity() {
    return this.entity != null;
  }

  public void setEntityIsSet(boolean value) {
    if (!value) {
      this.entity = null;
    }
  }

  public String getKey() {
    return this.key;
  }

  public ODSAppValueWithAggType setKey(String key) {
    this.key = key;
    return this;
  }

  public void unsetKey() {
    this.key = null;
  }

  /** Returns true if field key is set (has been assigned a value) and false otherwise */
  public boolean isSetKey() {
    return this.key != null;
  }

  public void setKeyIsSet(boolean value) {
    if (!value) {
      this.key = null;
    }
  }

  /**
   * 
   * @see OdsAggregationType
   */
  public OdsAggregationType getAggType() {
    return this.aggType;
  }

  /**
   * 
   * @see OdsAggregationType
   */
  public ODSAppValueWithAggType setAggType(OdsAggregationType aggType) {
    this.aggType = aggType;
    return this;
  }

  public void unsetAggType() {
    this.aggType = null;
  }

  /** Returns true if field aggType is set (has been assigned a value) and false otherwise */
  public boolean isSetAggType() {
    return this.aggType != null;
  }

  public void setAggTypeIsSet(boolean value) {
    if (!value) {
      this.aggType = null;
    }
  }

  public int getCategory_id() {
    return this.category_id;
  }

  public ODSAppValueWithAggType setCategory_id(int category_id) {
    this.category_id = category_id;
    setCategory_idIsSet(true);
    return this;
  }

  public void unsetCategory_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CATEGORY_ID_ISSET_ID);
  }

  /** Returns true if field category_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCategory_id() {
    return EncodingUtils.testBit(__isset_bitfield, __CATEGORY_ID_ISSET_ID);
  }

  public void setCategory_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CATEGORY_ID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UNIX_TIME:
      if (value == null) {
        unsetUnixTime();
      } else {
        setUnixTime((Long)value);
      }
      break;

    case VALUE:
      if (value == null) {
        unsetValue();
      } else {
        setValue((Double)value);
      }
      break;

    case ENTITY:
      if (value == null) {
        unsetEntity();
      } else {
        setEntity((String)value);
      }
      break;

    case KEY:
      if (value == null) {
        unsetKey();
      } else {
        setKey((String)value);
      }
      break;

    case AGG_TYPE:
      if (value == null) {
        unsetAggType();
      } else {
        setAggType((OdsAggregationType)value);
      }
      break;

    case CATEGORY_ID:
      if (value == null) {
        unsetCategory_id();
      } else {
        setCategory_id((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UNIX_TIME:
      return Long.valueOf(getUnixTime());

    case VALUE:
      return Double.valueOf(getValue());

    case ENTITY:
      return getEntity();

    case KEY:
      return getKey();

    case AGG_TYPE:
      return getAggType();

    case CATEGORY_ID:
      return Integer.valueOf(getCategory_id());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UNIX_TIME:
      return isSetUnixTime();
    case VALUE:
      return isSetValue();
    case ENTITY:
      return isSetEntity();
    case KEY:
      return isSetKey();
    case AGG_TYPE:
      return isSetAggType();
    case CATEGORY_ID:
      return isSetCategory_id();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ODSAppValueWithAggType)
      return this.equals((ODSAppValueWithAggType)that);
    return false;
  }

  public boolean equals(ODSAppValueWithAggType that) {
    if (that == null)
      return false;

    boolean this_present_unixTime = true;
    boolean that_present_unixTime = true;
    if (this_present_unixTime || that_present_unixTime) {
      if (!(this_present_unixTime && that_present_unixTime))
        return false;
      if (this.unixTime != that.unixTime)
        return false;
    }

    boolean this_present_value = true;
    boolean that_present_value = true;
    if (this_present_value || that_present_value) {
      if (!(this_present_value && that_present_value))
        return false;
      if (this.value != that.value)
        return false;
    }

    boolean this_present_entity = true && this.isSetEntity();
    boolean that_present_entity = true && that.isSetEntity();
    if (this_present_entity || that_present_entity) {
      if (!(this_present_entity && that_present_entity))
        return false;
      if (!this.entity.equals(that.entity))
        return false;
    }

    boolean this_present_key = true && this.isSetKey();
    boolean that_present_key = true && that.isSetKey();
    if (this_present_key || that_present_key) {
      if (!(this_present_key && that_present_key))
        return false;
      if (!this.key.equals(that.key))
        return false;
    }

    boolean this_present_aggType = true && this.isSetAggType();
    boolean that_present_aggType = true && that.isSetAggType();
    if (this_present_aggType || that_present_aggType) {
      if (!(this_present_aggType && that_present_aggType))
        return false;
      if (!this.aggType.equals(that.aggType))
        return false;
    }

    boolean this_present_category_id = true;
    boolean that_present_category_id = true;
    if (this_present_category_id || that_present_category_id) {
      if (!(this_present_category_id && that_present_category_id))
        return false;
      if (this.category_id != that.category_id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_unixTime = true;
    list.add(present_unixTime);
    if (present_unixTime)
      list.add(unixTime);

    boolean present_value = true;
    list.add(present_value);
    if (present_value)
      list.add(value);

    boolean present_entity = true && (isSetEntity());
    list.add(present_entity);
    if (present_entity)
      list.add(entity);

    boolean present_key = true && (isSetKey());
    list.add(present_key);
    if (present_key)
      list.add(key);

    boolean present_aggType = true && (isSetAggType());
    list.add(present_aggType);
    if (present_aggType)
      list.add(aggType.getValue());

    boolean present_category_id = true;
    list.add(present_category_id);
    if (present_category_id)
      list.add(category_id);

    return list.hashCode();
  }

  @Override
  public int compareTo(ODSAppValueWithAggType other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUnixTime()).compareTo(other.isSetUnixTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnixTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unixTime, other.unixTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValue()).compareTo(other.isSetValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.value, other.value);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEntity()).compareTo(other.isSetEntity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entity, other.entity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKey()).compareTo(other.isSetKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.key, other.key);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAggType()).compareTo(other.isSetAggType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAggType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggType, other.aggType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategory_id()).compareTo(other.isSetCategory_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategory_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.category_id, other.category_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ODSAppValueWithAggType(");
    boolean first = true;

    sb.append("unixTime:");
    sb.append(this.unixTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("value:");
    sb.append(this.value);
    first = false;
    if (!first) sb.append(", ");
    sb.append("entity:");
    if (this.entity == null) {
      sb.append("null");
    } else {
      sb.append(this.entity);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("key:");
    if (this.key == null) {
      sb.append("null");
    } else {
      sb.append(this.key);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("aggType:");
    if (this.aggType == null) {
      sb.append("null");
    } else {
      sb.append(this.aggType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("category_id:");
    sb.append(this.category_id);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ODSAppValueWithAggTypeStandardSchemeFactory implements SchemeFactory {
    public ODSAppValueWithAggTypeStandardScheme getScheme() {
      return new ODSAppValueWithAggTypeStandardScheme();
    }
  }

  private static class ODSAppValueWithAggTypeStandardScheme extends StandardScheme<ODSAppValueWithAggType> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ODSAppValueWithAggType struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UNIX_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.unixTime = iprot.readI64();
              struct.setUnixTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.value = iprot.readDouble();
              struct.setValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ENTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.entity = iprot.readString();
              struct.setEntityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.key = iprot.readString();
              struct.setKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AGG_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.aggType = com.facebook.maestro.OdsAggregationType.findByValue(iprot.readI32());
              struct.setAggTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CATEGORY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.category_id = iprot.readI32();
              struct.setCategory_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ODSAppValueWithAggType struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(UNIX_TIME_FIELD_DESC);
      oprot.writeI64(struct.unixTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VALUE_FIELD_DESC);
      oprot.writeDouble(struct.value);
      oprot.writeFieldEnd();
      if (struct.entity != null) {
        oprot.writeFieldBegin(ENTITY_FIELD_DESC);
        oprot.writeString(struct.entity);
        oprot.writeFieldEnd();
      }
      if (struct.key != null) {
        oprot.writeFieldBegin(KEY_FIELD_DESC);
        oprot.writeString(struct.key);
        oprot.writeFieldEnd();
      }
      if (struct.aggType != null) {
        oprot.writeFieldBegin(AGG_TYPE_FIELD_DESC);
        oprot.writeI32(struct.aggType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CATEGORY_ID_FIELD_DESC);
      oprot.writeI32(struct.category_id);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ODSAppValueWithAggTypeTupleSchemeFactory implements SchemeFactory {
    public ODSAppValueWithAggTypeTupleScheme getScheme() {
      return new ODSAppValueWithAggTypeTupleScheme();
    }
  }

  private static class ODSAppValueWithAggTypeTupleScheme extends TupleScheme<ODSAppValueWithAggType> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ODSAppValueWithAggType struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetUnixTime()) {
        optionals.set(0);
      }
      if (struct.isSetValue()) {
        optionals.set(1);
      }
      if (struct.isSetEntity()) {
        optionals.set(2);
      }
      if (struct.isSetKey()) {
        optionals.set(3);
      }
      if (struct.isSetAggType()) {
        optionals.set(4);
      }
      if (struct.isSetCategory_id()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetUnixTime()) {
        oprot.writeI64(struct.unixTime);
      }
      if (struct.isSetValue()) {
        oprot.writeDouble(struct.value);
      }
      if (struct.isSetEntity()) {
        oprot.writeString(struct.entity);
      }
      if (struct.isSetKey()) {
        oprot.writeString(struct.key);
      }
      if (struct.isSetAggType()) {
        oprot.writeI32(struct.aggType.getValue());
      }
      if (struct.isSetCategory_id()) {
        oprot.writeI32(struct.category_id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ODSAppValueWithAggType struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.unixTime = iprot.readI64();
        struct.setUnixTimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.value = iprot.readDouble();
        struct.setValueIsSet(true);
      }
      if (incoming.get(2)) {
        struct.entity = iprot.readString();
        struct.setEntityIsSet(true);
      }
      if (incoming.get(3)) {
        struct.key = iprot.readString();
        struct.setKeyIsSet(true);
      }
      if (incoming.get(4)) {
        struct.aggType = com.facebook.maestro.OdsAggregationType.findByValue(iprot.readI32());
        struct.setAggTypeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.category_id = iprot.readI32();
        struct.setCategory_idIsSet(true);
      }
    }
  }

}

