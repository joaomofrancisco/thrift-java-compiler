/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.facebook.maestro;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * some entity types that are used in
 * the ods search utils page. in that php page,
 * they will be migrated to use this.
 */
public enum OdsEntityGroupTypes implements org.apache.thrift.TEnum {
  ENTITY_TYPE_APPLICATION(0),
  ENTITY_TYPE_OTHERS(0),
  ENTITY_TYPE_HOST_NAME(1),
  ENTITY_TYPE_AGGREGATED(2),
  ENTITY_TYPE_SMC_TIER(2),
  ENTITY_TYPE_FBNET(3),
  ENTITY_TYPE_NETWORK_LATENCY(4),
  ENTITY_TYPE_STORAGE(5),
  ENTITY_TYPE_NETWORK(6),
  ENTITY_TYPE_DATACENTER_MAINTENANCE_STATUS(7),
  ENTITY_TYPE_POWER(8),
  ENTITY_TYPE_DEAD(9),
  KEY_TYPE_DEAD(9),
  APP_GROUP_THRESHOLD(5);

  private final int value;

  private OdsEntityGroupTypes(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static OdsEntityGroupTypes findByValue(int value) { 
    switch (value) {
      case 0:
        return ENTITY_TYPE_APPLICATION;
      case 0:
        return ENTITY_TYPE_OTHERS;
      case 1:
        return ENTITY_TYPE_HOST_NAME;
      case 2:
        return ENTITY_TYPE_AGGREGATED;
      case 2:
        return ENTITY_TYPE_SMC_TIER;
      case 3:
        return ENTITY_TYPE_FBNET;
      case 4:
        return ENTITY_TYPE_NETWORK_LATENCY;
      case 5:
        return ENTITY_TYPE_STORAGE;
      case 6:
        return ENTITY_TYPE_NETWORK;
      case 7:
        return ENTITY_TYPE_DATACENTER_MAINTENANCE_STATUS;
      case 8:
        return ENTITY_TYPE_POWER;
      case 9:
        return ENTITY_TYPE_DEAD;
      case 9:
        return KEY_TYPE_DEAD;
      case 5:
        return APP_GROUP_THRESHOLD;
      default:
        return null;
    }
  }
}
